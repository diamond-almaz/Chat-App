{"ast":null,"code":"import _toConsumableArray from \"/Users/almazsaripov/Documents/Projects/react-way-of-samurai/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/almazsaripov/Documents/Projects/react-way-of-samurai/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nvar SEND_MESSAGE = 'SEND_MESSAGE';\nvar initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Dimych'\n  }, {\n    id: 2,\n    name: 'Andrew'\n  }, {\n    id: 3,\n    name: 'Sveta'\n  }, {\n    id: 4,\n    name: 'Sasha'\n  }, {\n    id: 5,\n    name: 'Viktor'\n  }, {\n    id: 6,\n    name: 'Valera'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Hi'\n  }, {\n    id: 2,\n    message: 'How is your it-kamasutra?'\n  }, {\n    id: 3,\n    message: 'Yo'\n  }, {\n    id: 4,\n    message: 'Yo'\n  }, {\n    id: 5,\n    message: 'Yo'\n  }],\n  newMessageBody: \"\"\n};\n\nvar dialogsReducer = function dialogsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var stateCopy;\n\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:\n      stateCopy = _objectSpread({}, state, {\n        newMessageBody: action.body\n      });\n      return stateCopy;\n\n    case SEND_MESSAGE:\n      var body = state.newMessageBody;\n      stateCopy = _objectSpread({}, state, {\n        newMessageBody: '',\n        messages: _toConsumableArray(state.messages).concat([{\n          id: 6,\n          message: body\n        }])\n      });\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport var sendMessageCreator = function sendMessageCreator() {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport var updateNewMessageBodyCreator = function updateNewMessageBodyCreator(body) {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/react-way-of-samurai/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","stateCopy","type","body","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":";;AAAA,IAAMA,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GANK,CADM;AASfC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADM,EAEN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFM,EAGN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHM,EAIN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJM,EAKN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GALM,CATK;AAgBfC,EAAAA,cAAc,EAAE;AAhBD,CAAnB;;AAmBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;AACrD,MAAIC,SAAJ;;AACD,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKb,uBAAL;AACIY,MAAAA,SAAS,qBACFF,KADE;AAELF,QAAAA,cAAc,EAACG,MAAM,CAACG;AAFjB,QAAT;AAIA,aAAOF,SAAP;;AACJ,SAAKX,YAAL;AACI,UAAIa,IAAI,GAAGJ,KAAK,CAACF,cAAjB;AACAI,MAAAA,SAAS,qBACFF,KADE;AAELF,QAAAA,cAAc,EAAE,EAFX;AAGLF,QAAAA,QAAQ,qBAAMI,KAAK,CAACJ,QAAZ,UAAqB;AAACF,UAAAA,EAAE,EAAE,CAAL;AAAQG,UAAAA,OAAO,EAAEO;AAAjB,SAArB;AAHH,QAAT;AAKA,aAAOF,SAAP;;AACJ;AACI,aAAOF,KAAP;AAhBR;AAkBF,CApBD;;AAsBA,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO;AAACF,IAAAA,IAAI,EAAEZ;AAAP,GAAP;AAAA,CAA3B;AACP,OAAO,IAAMe,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACF,IAAD;AAAA,SACtC;AAAED,IAAAA,IAAI,EAAEb,uBAAR;AAAiCc,IAAAA,IAAI,EAAEA;AAAvC,GADsC;AAAA,CAApC;AAGP,eAAeL,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n   switch (action.type) {\r\n       case UPDATE_NEW_MESSAGE_BODY:\r\n           stateCopy={\r\n               ...state,\r\n               newMessageBody:action.body\r\n           }\r\n           return stateCopy;\r\n       case SEND_MESSAGE:\r\n           let body = state.newMessageBody;\r\n           stateCopy={\r\n               ...state,\r\n               newMessageBody: '',\r\n               messages: [...state.messages,{id: 6, message: body}]\r\n           }\r\n           return stateCopy;\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({ type: UPDATE_NEW_MESSAGE_BODY, body: body })\r\n\r\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}