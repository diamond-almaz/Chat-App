{"ast":null,"code":"var NEW_MESSAGE_BODY = 'NEW-MESSAGE-BODY'; // каждый символ в текстареа для сообщения добавляет в state\n\nvar SEND_MESSAGE = 'SEND-MESSAGE'; // отправляет сообщение\n\nexport var updateNewMessageBodyCreator = function updateNewMessageBodyCreator(body) {\n  return {\n    type: NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nexport var sendMessageCreator = function sendMessageCreator() {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nvar initialState = {\n  dialogsPage: {\n    dialogs: [{\n      id: 1,\n      name: 'Dimych'\n    }, {\n      id: 2,\n      name: 'Andrew'\n    }, {\n      id: 3,\n      name: 'Sveta'\n    }, {\n      id: 4,\n      name: 'Sasha'\n    }, {\n      id: 5,\n      name: 'Viktor'\n    }, {\n      id: 6,\n      name: 'Valera'\n    }],\n    messages: [{\n      id: 1,\n      message: 'Hi'\n    }, {\n      id: 2,\n      message: 'How is your it-kamasutra?'\n    }, {\n      id: 3,\n      message: 'Yo'\n    }, {\n      id: 4,\n      message: 'Yo'\n    }, {\n      id: 5,\n      message: 'Yo'\n    }],\n    newMessageBody: ''\n  }\n};\n\nvar dialogsReducer = function dialogsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('dialogsReducer');\n\n  switch (action.type) {\n    case NEW_MESSAGE_BODY:\n      state.newMessageBody = action.body;\n      return state;\n\n    case SEND_MESSAGE:\n      var body = state.newMessageBody;\n      state.messages.push({\n        id: 6,\n        message: body\n      });\n      state.newMessageBody = '';\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/react-way-of-samurai/src/redux/dialogs-reducer.js"],"names":["NEW_MESSAGE_BODY","SEND_MESSAGE","updateNewMessageBodyCreator","body","type","sendMessageCreator","initialState","dialogsPage","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","console","log","push"],"mappings":"AAAA,IAAMA,gBAAgB,GAAC,kBAAvB,C,CAA2C;;AAC3C,IAAMC,YAAY,GAAC,cAAnB,C,CAAmC;;AAEnC,OAAO,IAAMC,2BAA2B,GAAC,SAA5BA,2BAA4B,CAACC,IAAD;AAAA,SAAS;AAACC,IAAAA,IAAI,EAAEJ,gBAAP;AAAyBG,IAAAA,IAAI,EAAEA;AAA/B,GAAT;AAAA,CAAlC;AACP,OAAO,IAAME,kBAAkB,GAAC,SAAnBA,kBAAmB;AAAA,SAAK;AAACD,IAAAA,IAAI,EAAEH;AAAP,GAAL;AAAA,CAAzB;AAEP,IAAIK,YAAY,GAAC;AACbC,EAAAA,WAAW,EAAE;AACTC,IAAAA,OAAO,EAAE,CACL;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KADK,EAEL;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAFK,EAGL;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAHK,EAIL;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAJK,EAKL;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KALK,EAML;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KANK,CADA;AASTC,IAAAA,QAAQ,EAAE,CACN;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KADM,EAEN;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAFM,EAGN;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAHM,EAIN;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAJM,EAKN;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KALM,CATD;AAgBTC,IAAAA,cAAc,EAAE;AAhBP;AADA,CAAjB;;AAqBA,IAAMC,cAAc,GAAC,SAAfA,cAAe,GAA8B;AAAA,MAA7BC,KAA6B,uEAAvBT,YAAuB;AAAA,MAATU,MAAS;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,UAAQF,MAAM,CAACZ,IAAf;AACI,SAAKJ,gBAAL;AACIe,MAAAA,KAAK,CAACF,cAAN,GAAuBG,MAAM,CAACb,IAA9B;AACA,aAAOY,KAAP;;AACJ,SAAKd,YAAL;AACI,UAAIE,IAAI,GAAGY,KAAK,CAACF,cAAjB;AACAE,MAAAA,KAAK,CAACJ,QAAN,CAAeQ,IAAf,CAAoB;AAACV,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAET;AAAjB,OAApB;AACAY,MAAAA,KAAK,CAACF,cAAN,GAAuB,EAAvB;AACA,aAAOE,KAAP;;AACJ;AACI,aAAOA,KAAP;AAVR;AAYH,CAdD;;AAeA,eAAeD,cAAf","sourcesContent":["const NEW_MESSAGE_BODY='NEW-MESSAGE-BODY'; // каждый символ в текстареа для сообщения добавляет в state\nconst SEND_MESSAGE='SEND-MESSAGE'; // отправляет сообщение\n\nexport const updateNewMessageBodyCreator=(body)=>({type: NEW_MESSAGE_BODY, body: body});\nexport const sendMessageCreator=()=>({type: SEND_MESSAGE});\n\nlet initialState={\n    dialogsPage: {\n        dialogs: [\n            {id: 1, name: 'Dimych'},\n            {id: 2, name: 'Andrew'},\n            {id: 3, name: 'Sveta'},\n            {id: 4, name: 'Sasha'},\n            {id: 5, name: 'Viktor'},\n            {id: 6, name: 'Valera'}\n        ],\n        messages: [\n            {id: 1, message: 'Hi'},\n            {id: 2, message: 'How is your it-kamasutra?'},\n            {id: 3, message: 'Yo'},\n            {id: 4, message: 'Yo'},\n            {id: 5, message: 'Yo'}\n        ],\n        newMessageBody: ''\n    }\n}\n\nconst dialogsReducer=(state=initialState, action)=>{\n    console.log('dialogsReducer')\n    switch (action.type) {\n        case NEW_MESSAGE_BODY:\n            state.newMessageBody = action.body;\n            return state;\n        case SEND_MESSAGE:\n            let body = state.newMessageBody;\n            state.messages.push({id: 6, message: body})\n            state.newMessageBody = '';\n            return state;\n        default:\n            return state;\n    }\n}\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}