{"ast":null,"code":"import _readOnlyError from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Avtorization/Avtorization.jsx\";\n\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthAPI } from '../../api/api';\nimport { connect } from 'react-redux';\nimport { setUserData } from '../../redux/auth-reducer';\nimport { Redirect } from \"react-router-dom\";\nimport { required } from '../../validator/validator';\nimport { Input } from '../../common/FieldCommon';\n\nvar AvtorizationForm = function AvtorizationForm(props) {\n  var _this$props = _this.props,\n      handleSubmit = _this$props.handleSubmit,\n      submitMyForm = _this$props.submitMyForm;\n  submitMyForm = (_readOnlyError(\"submitMyForm\"), function (data) {\n    var _this$props2 = _this.props,\n        createRecord = _this$props2.createRecord,\n        resetForm = _this$props2.resetForm;\n    return createRecord(data).then(function () {\n      resetForm(); // do other success stuff\n    });\n  });\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(submitMyForm.bind(_this)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    component: Input,\n    placeholder: 'Введите логин',\n    name: 'login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    type: 'password',\n    component: Input,\n    placeholder: 'Введите пароль',\n    name: 'password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: 'input',\n    type: 'checkbox',\n    name: 'rememberMe',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: '/registration',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\\u0412\\u0445\\u043E\\u0434\")));\n};\n\nvar AdvtorizationReduxForm = reduxForm({\n  form: 'login'\n})(AvtorizationForm);\n\nvar Avtorization = function Avtorization(props) {\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n    AuthAPI.login(data.login, data.password).then(function (response) {\n      //В случае успешной авторизации\n      props.setUserData(response.data.id, response.data.login);\n    }).catch(function (response) {\n      //Заглушка\n      console.log('Заглушка');\n      props.setUserData(12, data.login);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\u0412\\u0445\\u043E\\u0434\"), props.isAuth ? React.createElement(Redirect, {\n    to: '/profile',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }) : React.createElement(AdvtorizationReduxForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setUserData: setUserData\n})(Avtorization);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Avtorization/Avtorization.jsx"],"names":["React","NavLink","Field","reduxForm","AuthAPI","connect","setUserData","Redirect","required","Input","AvtorizationForm","props","handleSubmit","submitMyForm","data","createRecord","resetForm","then","bind","AdvtorizationReduxForm","form","Avtorization","onSubmit","console","log","login","password","response","id","catch","isAuth","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form'\nimport {AuthAPI} from '../../api/api'\nimport {connect} from 'react-redux'\nimport {setUserData} from '../../redux/auth-reducer'\nimport {Redirect} from \"react-router-dom\";\nimport {required} from '../../validator/validator'\nimport {Input} from '../../common/FieldCommon'\n\n\nconst AvtorizationForm=(props)=>{\n    const {handleSubmit, submitMyForm} = this.props;\n    submitMyForm=(data)=>{\n        const {createRecord, resetForm} = this.props;\n        return createRecord(data).then(() => {\n            resetForm();\n            // do other success stuff\n        });\n    }\n    return (\n        <form onSubmit={handleSubmit(submitMyForm.bind(this))}>\n            <div>\n                <Field validate={[required]} component={Input} placeholder={'Введите логин'} name={'login'}/>\n            </div>\n            <div>\n                <Field validate={[required]} type={'password'}  component={Input} placeholder={'Введите пароль'} name={'password'}/>\n            </div>\n            <div>\n                <Field component={'input'} type={'checkbox'} name={'rememberMe'}/> Запомнить меня\n            </div>\n            <div>\n                <NavLink to={'/registration'}>Зарегистрироваться</NavLink>\n            </div>\n            <div>\n                <button>Вход</button>\n            </div>\n\n        </form>)\n}\n\nconst AdvtorizationReduxForm = reduxForm({form: 'login'})(AvtorizationForm)\n\n\nlet Avtorization=(props)=>{\n    const onSubmit=(data)=>{\n        console.log(data)\n        AuthAPI.login(data.login,data.password).then(response=>{\n            //В случае успешной авторизации\n            props.setUserData(response.data.id, response.data.login)\n        }).catch((response=>{\n            //Заглушка\n            console.log('Заглушка')\n            props.setUserData(12, data.login)\n        }))\n\n    }\n    return <>\n        <h1>Вход</h1>\n            {props.isAuth?<Redirect to={'/profile'}/>:<AdvtorizationReduxForm onSubmit={onSubmit}/>}\n    </>\n}\n\nlet mapStateToProps=(state)=>({\n    isAuth: state.auth.isAuth\n})\n\n\n\nexport default connect(mapStateToProps, {setUserData})(Avtorization)\n\n\n\n"]},"metadata":{},"sourceType":"module"}