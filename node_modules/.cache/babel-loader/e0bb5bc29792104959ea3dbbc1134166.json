{"ast":null,"code":"var _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Avtorization/Avtorization.jsx\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthAPI } from '../../api/api';\nimport { connect } from 'react-redux';\nimport { setUserData } from '../../redux/auth-reducer';\nimport { Redirect } from \"react-router-dom\";\nimport { required } from '../../validator/validator';\nimport { Input } from '../../common/FieldCommon';\n\nvar AvtorizationForm = function AvtorizationForm(props) {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    component: Input,\n    placeholder: 'Введите логин',\n    name: 'login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    type: 'password',\n    component: Input,\n    placeholder: 'Введите пароль',\n    name: 'password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: 'input',\n    type: 'checkbox',\n    name: 'rememberMe',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" \\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: '/registration',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u0412\\u0445\\u043E\\u0434\")));\n};\n\nvar AdvtorizationReduxForm = reduxForm({\n  form: 'login'\n})(AvtorizationForm);\n\nvar Avtorization = function Avtorization(props) {\n  var onSubmit = function onSubmit(data) {\n    AuthAPI.login(data.login, data.password).then().catch(); //В случае успешной авторизации\n\n    var response = {\n      login: \"Almaz\",\n      id: \"12\"\n    };\n    props.setUserData(response.id, data.login); // Здесь в дальнейшем должны передаваться id, login\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\u0412\\u0445\\u043E\\u0434\"), props.isAuth ? React.createElement(Redirect, {\n    to: '/profile',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(AdvtorizationReduxForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setUserData: setUserData\n})(Avtorization);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Avtorization/Avtorization.jsx"],"names":["React","NavLink","Field","reduxForm","AuthAPI","connect","setUserData","Redirect","required","Input","AvtorizationForm","props","handleSubmit","AdvtorizationReduxForm","form","Avtorization","onSubmit","data","login","password","then","catch","response","id","isAuth","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form'\nimport {AuthAPI} from '../../api/api'\nimport {connect} from 'react-redux'\nimport {setUserData} from '../../redux/auth-reducer'\nimport {Redirect} from \"react-router-dom\";\nimport {required} from '../../validator/validator'\nimport {Input} from '../../common/FieldCommon'\n\n\nconst AvtorizationForm=(props)=>{\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate={[required]} component={Input} placeholder={'Введите логин'} name={'login'}/>\n            </div>\n            <div>\n                <Field validate={[required]} type={'password'}  component={Input} placeholder={'Введите пароль'} name={'password'}/>\n            </div>\n            <div>\n                <Field component={'input'} type={'checkbox'} name={'rememberMe'}/> Запомнить меня\n            </div>\n            <div>\n                <NavLink to={'/registration'}>Зарегистрироваться</NavLink>\n            </div>\n            <div>\n                <button>Вход</button>\n            </div>\n\n        </form>)\n}\n\nconst AdvtorizationReduxForm = reduxForm({form: 'login'})(AvtorizationForm)\n\n\nlet Avtorization=(props)=>{\n    const onSubmit=(data)=>{\n        AuthAPI.login(data.login,data.password).then().catch();\n        //В случае успешной авторизации\n        const response={ login: \"Almaz\", id: \"12\"}\n        props.setUserData(response.id, data.login)// Здесь в дальнейшем должны передаваться id, login\n    }\n    return <>\n        <h1>Вход</h1>\n            {props.isAuth?<Redirect to={'/profile'}/>:<AdvtorizationReduxForm onSubmit={onSubmit}/>}\n    </>\n}\n\nlet mapStateToProps=(state)=>({\n    isAuth: state.auth.isAuth\n})\n\n\n\nexport default connect(mapStateToProps, {setUserData})(Avtorization)\n\n\n\n"]},"metadata":{},"sourceType":"module"}