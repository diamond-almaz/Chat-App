{"ast":null,"code":"var ADD_POST = 'ADD-POST';\nvar NEW_POST_TEXT = 'NEW-POST-TEXT';\nvar NEW_MESSAGE_BODY = 'NEW-MESSAGE-BODY';\nvar store = {\n  _subscribe: function _subscribe(observer) {\n    console.log('Observers is null');\n  },\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 12\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 11\n      }, {\n        id: 3,\n        message: 'Blabla',\n        likesCount: 11\n      }, {\n        id: 4,\n        message: 'Dada',\n        likesCount: 11\n      }],\n      newPostText: 'it-kamasutra.com'\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrew'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Viktor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How is your it-kamasutra?'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'Yo'\n      }, {\n        id: 5,\n        message: 'Yo'\n      }],\n      newMessageBody: ''\n    },\n    sidebar: {}\n  },\n  subscribe: function subscribe(observer) {\n    this._subscribe = observer;\n  },\n  getState: function getState() {\n    return this._state;\n  },\n  addPost: function addPost() {\n    var newPost = {\n      id: 5,\n      message: this._state.profilePage.newPostText,\n      likesCount: 0\n    };\n\n    this._state.profilePage.posts.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n\n    this._subscribe();\n  },\n  updateNewPostText: function updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n\n    this._subscribe();\n  },\n  dispatch: function dispatch(action) {\n    if (action.type === ADD_POST) {\n      {\n        var newPost = {\n          id: 5,\n          message: this._state.profilePage.newPostText,\n          likesCount: 0\n        };\n\n        this._state.profilePage.posts.push(newPost);\n\n        this._state.profilePage.newPostText = '';\n\n        this._subscribe();\n      }\n    } else if (action.type === NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._subscribe();\n    } else if (action.type === NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._subscribe();\n    }\n  }\n};\nexport var addPostActionCreator = function addPostActionCreator() {\n  return {\n    type: ADD_POST\n  };\n};\nexport var onPostChangeActionCreator = function onPostChangeActionCreator(text) {\n  return {\n    type: NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport default store;","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/react-way-of-samurai/src/redux/state.js"],"names":["ADD_POST","NEW_POST_TEXT","NEW_MESSAGE_BODY","store","_subscribe","observer","console","log","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","sidebar","subscribe","getState","addPost","newPost","push","updateNewPostText","newText","dispatch","action","type","body","addPostActionCreator","onPostChangeActionCreator","text"],"mappings":"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","sourcesContent":["const ADD_POST='ADD-POST';\r\nconst NEW_POST_TEXT='NEW-POST-TEXT';\r\nconst NEW_MESSAGE_BODY='NEW-MESSAGE-BODY'\r\n\r\nlet store ={\r\n    _subscribe(observer) {\r\n        console.log('Observers is null');\r\n    },\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n                {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n                {id: 3, message: 'Blabla', likesCount: 11},\r\n                {id: 4, message: 'Dada', likesCount: 11}\r\n            ],\r\n            newPostText: 'it-kamasutra.com'\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Andrew'},\r\n                {id: 3, name: 'Sveta'},\r\n                {id: 4, name: 'Sasha'},\r\n                {id: 5, name: 'Viktor'},\r\n                {id: 6, name: 'Valera'}\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'How is your it-kamasutra?'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Yo'},\r\n                {id: 5, message: 'Yo'}\r\n            ],\r\n            newMessageBody: ''\r\n        },\r\n        sidebar: {}\r\n    },\r\n\r\n    subscribe(observer) {\r\n      this._subscribe=observer;\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    addPost() {\r\n        let newPost = {\r\n            id: 5,\r\n            message: this._state.profilePage.newPostText,\r\n            likesCount: 0\r\n        };\r\n        this._state.profilePage.posts.push(newPost);\r\n        this._state.profilePage.newPostText = '';\r\n        this._subscribe();\r\n    },\r\n    updateNewPostText(newText) {\r\n        this._state.profilePage.newPostText = newText;\r\n        this._subscribe();\r\n    },\r\n    dispatch(action) {\r\n        if (action.type===ADD_POST)\r\n        {\r\n            {\r\n                let newPost = {\r\n                    id: 5,\r\n                    message: this._state.profilePage.newPostText,\r\n                    likesCount: 0\r\n                };\r\n                this._state.profilePage.posts.push(newPost);\r\n                this._state.profilePage.newPostText = '';\r\n                this._subscribe();\r\n            }\r\n        }\r\n        else if (action.type===NEW_POST_TEXT) {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._subscribe();\r\n        }\r\n        else if (action.type===NEW_MESSAGE_BODY) {\r\n            this._state.dialogsPage.newMessageBody=action.body;\r\n            this._subscribe()\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator=()=>({type: ADD_POST});\r\n\r\nexport const onPostChangeActionCreator=(text)=>({type: NEW_POST_TEXT, newText: text });\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}