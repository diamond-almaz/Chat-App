{"ast":null,"code":"import _toConsumableArray from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { usersAPI } from \"../api/api\";\nvar ADD_POST = 'ADD-POST';\nvar UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nvar SET_USER_PROFILE = 'SET_USER_PROFILE';\nvar initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  newPostText: 'it-kamasutra.com',\n  profile: null\n};\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          posts: _toConsumableArray(state.posts).concat([newPost]),\n          newPostText: ''\n        });\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return _objectSpread({}, state, {\n          newPostText: action.newText\n        });\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var addPostActionCreator = function addPostActionCreator() {\n  return {\n    type: ADD_POST\n  };\n};\nexport var setUserProfile = function setUserProfile(profile) {\n  return {\n    type: SET_USER_PROFILE,\n    profile: profile\n  };\n};\nexport var getUserProfile = function getUserProfile(userId) {\n  return function (dispatch) {\n    usersAPI.getProfile(userId).then(function (response) {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport var updateNewPostTextActionCreator = function updateNewPostTextActionCreator(text) {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/redux/profile-reducer.js"],"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","addPostActionCreator","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data","updateNewPostTextActionCreator","text"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,YAAvB;AAEA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,kBAAjB;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GADG,EAEH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,qBAAjB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GAFG,EAGH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,QAAjB;AAA2BC,IAAAA,UAAU,EAAE;AAAvC,GAHG,EAIH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,MAAjB;AAAyBC,IAAAA,UAAU,EAAE;AAArC,GAJG,CADQ;AAOfC,EAAAA,WAAW,EAAE,kBAPE;AAQfC,EAAAA,OAAO,EAAE;AARM,CAAnB;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAErD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,QAAL;AAAe;AACX,YAAIc,OAAO,GAAG;AACVT,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,OAAO,EAAEK,KAAK,CAACH,WAFL;AAGVD,UAAAA,UAAU,EAAE;AAHF,SAAd;AAKA,iCACOI,KADP;AAEIP,UAAAA,KAAK,qBAAMO,KAAK,CAACP,KAAZ,UAAmBU,OAAnB,EAFT;AAGIN,UAAAA,WAAW,EAAE;AAHjB;AAKH;;AACD,SAAKP,oBAAL;AAA2B;AACvB,iCACOU,KADP;AAEIH,UAAAA,WAAW,EAAEI,MAAM,CAACG;AAFxB;AAIH;;AACD,SAAKb,gBAAL;AAAuB;AACnB,iCAAWS,KAAX;AAAkBF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AAAlC;AACH;;AACD;AACI,aAAOE,KAAP;AAvBR;AAyBH,CA3BD;;AA8BA,OAAO,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AAACH,IAAAA,IAAI,EAAEb;AAAP,GAAP;AAAA,CAA7B;AACP,OAAO,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAACR,OAAD;AAAA,SAAc;AAACI,IAAAA,IAAI,EAAEX,gBAAP;AAAyBO,IAAAA,OAAO,EAAPA;AAAzB,GAAd;AAAA,CAAvB;AAEP,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAc;AACpDrB,IAAAA,QAAQ,CAACsB,UAAT,CAAoBF,MAApB,EAA4BG,IAA5B,CAAiC,UAAAC,QAAQ,EAAI;AACzCH,MAAAA,QAAQ,CAACH,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAf,CAAR;AACH,KAFD;AAGH,GAJ6B;AAAA,CAAvB;AAMP,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD;AAAA,SACzC;AAACb,IAAAA,IAAI,EAAEZ,oBAAP;AAA6Bc,IAAAA,OAAO,EAAEW;AAAtC,GADyC;AAAA,CAAvC;AAGP,eAAehB,cAAf","sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}