{"ast":null,"code":"import _regeneratorRuntime from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from 'redux-form';\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nvar AddMessageForm = function AddMessageForm(props) {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: 'textarea',\n    name: \"message\",\n    placeholder: \"Enter your message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nvar AddMessageFormRedux = reduxForm({\n  form: 'addMessage'\n})(AddMessageForm);\n\nvar Dialogs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dialogs, _React$Component);\n\n  function Dialogs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dialogs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dialogs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: null\n    };\n    return _this;\n  }\n\n  _createClass(Dialogs, [{\n    key: \"getId\",\n    value: function () {\n      var _getId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(id == this.state.id)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.next = 4;\n                return this.setState({\n                  id: id\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getId(_x) {\n        return _getId.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var state = this.props.dialogsPage;\n      var dialogsElements = state.dialogs.map(function (d) {\n        return React.createElement(DialogItem, {\n          name: d.name,\n          key: d.id,\n          id: d.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      });\n\n      var onSubmit = function onSubmit(data) {\n        _this2.props.sendMessage(data.message, _this2.state.id);\n      };\n\n      return React.createElement(\"div\", {\n        className: s.dialogs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: s.dialogsItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, dialogsElements), React.createElement(\"div\", {\n        className: s.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/dialogs/:userId?\",\n        render: function render() {\n          return React.createElement(Message, Object.assign({}, _this2.props, {\n            messages: state.messages,\n            getId: _this2.getId.bind(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), this.state.id != null ? React.createElement(AddMessageFormRedux, {\n        onSubmit: onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : ''));\n    }\n  }]);\n\n  return Dialogs;\n}(React.Component);\n\nexport default withRouter(Dialogs);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","Route","withRouter","AddMessageForm","props","handleSubmit","reset","AddMessageFormRedux","form","Dialogs","state","id","setState","dialogsPage","dialogsElements","dialogs","map","d","name","onSubmit","data","sendMessage","message","dialogsItems","messages","getId","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Route} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst AddMessageForm=(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={'textarea'} name={\"message\"} placeholder='Enter your message'/></div>\r\n            <div><button onClick={props.reset}>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddMessageFormRedux=reduxForm({form: 'addMessage'})(AddMessageForm)\r\n\r\n\r\nclass Dialogs extends React.Component {\r\n    state={\r\n        id: null\r\n    }\r\n    async getId(id) {\r\n        if (id==this.state.id) return\r\n        await this.setState({id: id})\r\n    }\r\n    render() {\r\n        let state = this.props.dialogsPage;\r\n\r\n        let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n\r\n\r\n        let onSubmit = (data) => {\r\n            this.props.sendMessage(data.message, this.state.id);\r\n        }\r\n        return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>\r\n                        <Route path='/dialogs/:userId?'\r\n                               render={() => <Message {...this.props} messages={state.messages} getId={this.getId.bind(this)}/>}/>\r\n                    </div>\r\n                    {this.state.id!=null?<AddMessageFormRedux onSubmit={onSubmit}/> :''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Dialogs);"]},"metadata":{},"sourceType":"module"}