{"ast":null,"code":"import * as axios from \"axios\";\nvar instance = axios.create({\n  // \"withCredentials\": true,\n  baseURL: 'https://chat-server-project.herokuapp.com/api/'\n});\nexport var UsersAPI = {\n  getMeInterests: function getMeInterests() {\n    instance.get(\"interests\");\n  },\n  //Получение своих интересов\n  createInterests: function createInterests(interests) {\n    instance.post(\"interests\", {\n      interests: interests\n    });\n  },\n  //Создание своих интересов\n  changeInterests: function changeInterests(interests) {\n    instance.put(\"interests\", {\n      interests: interests\n    });\n  },\n  //Смена интересов\n  getMessages: function getMessages(userID) {\n    instance.get(\"messages?user_getting=\".concat(userID));\n  },\n  //Получение сообщений пользователя по id через параметр user_getting\n  sendMessage: function sendMessage(userID, message) {\n    instance.post(\"messages\", {\n      \"user_getting\": userID,\n      \"message_text\": message\n    });\n  },\n  //Отправка сообщения пользователю\n  setRating: function setRating(rating, userID) {\n    instance.post(\"rating\", {\n      \"rating\": rating,\n      \"user\": userID\n    });\n  },\n  //Добавление рейтинга для пользователя\n  userForConversation: function userForConversation(interests) {\n    instance.get(\"user-for-conversation/\");\n  },\n  // ДОРАБОТАТЬ подбор пользователя исходя из интересов\n  getUsers: function getUsers() {\n    instance.get(\"users\");\n  } //Получение всех юзеров кому можно отправить сообщение\n\n};\nexport var AuthAPI = {\n  login: function login(_login, password) {\n    axios.post(\"https://chat-server-project.herokuapp.com/accounts/login\", {\n      login: _login,\n      password: password\n    }, {\n      withCredentials: true\n    });\n  },\n  registration: function registration(username, password1, password2) {\n    axios.post(\"https://chat-server-project.herokuapp.com/accounts/signup/ \", {\n      username: username,\n      email: \"new_email@mail.com\",\n      public_key: \"asddfg\",\n      password1: password1,\n      password2: password2\n    }, {\n      withCredentials: true\n    });\n  }\n};","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/api/api.js"],"names":["axios","instance","create","baseURL","UsersAPI","getMeInterests","get","createInterests","interests","post","changeInterests","put","getMessages","userID","sendMessage","message","setRating","rating","userForConversation","getUsers","AuthAPI","login","password","withCredentials","registration","username","password1","password2","email","public_key"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,QAAQ,GAACD,KAAK,CAACE,MAAN,CAAa;AACxB;AACAC,EAAAA,OAAO,EAAE;AAFe,CAAb,CAAf;AAKA,OAAO,IAAMC,QAAQ,GAAC;AAClBC,EAAAA,cAAc,EAAE,0BAAI;AAACJ,IAAAA,QAAQ,CAACK,GAAT;AAA0B,GAD7B;AAC+B;AACjDC,EAAAA,eAAe,EAAE,yBAACC,SAAD,EAAa;AAACP,IAAAA,QAAQ,CAACQ,IAAT,cAA0B;AAACD,MAAAA,SAAS,EAATA;AAAD,KAA1B;AAAuC,GAFpD;AAEsD;AACxEE,EAAAA,eAAe,EAAE,yBAACF,SAAD,EAAa;AAACP,IAAAA,QAAQ,CAACU,GAAT,cAAyB;AAACH,MAAAA,SAAS,EAATA;AAAD,KAAzB;AAAsC,GAHnD;AAGqD;AACvEI,EAAAA,WAAW,EAAE,qBAACC,MAAD,EAAU;AAACZ,IAAAA,QAAQ,CAACK,GAAT,iCAAsCO,MAAtC;AAAgD,GAJtD;AAIwD;AAC1EC,EAAAA,WAAW,EAAE,qBAACD,MAAD,EAASE,OAAT,EAAmB;AAACd,IAAAA,QAAQ,CAACQ,IAAT,aAA0B;AAAC,sBAAgBI,MAAjB;AAAyB,sBAAgBE;AAAzC,KAA1B;AAA6E,GAL5F;AAK8F;AAChHC,EAAAA,SAAS,EAAE,mBAACC,MAAD,EAASJ,MAAT,EAAkB;AAACZ,IAAAA,QAAQ,CAACQ,IAAT,WAAwB;AAAC,gBAAUQ,MAAX;AAAmB,cAAQJ;AAA3B,KAAxB;AAA4D,GANxE;AAM0E;AAC5FK,EAAAA,mBAAmB,EAAE,6BAACV,SAAD,EAAa;AAACP,IAAAA,QAAQ,CAACK,GAAT;AAAuC,GAPxD;AAO0D;AAC5Ea,EAAAA,QAAQ,EAAE,oBAAI;AAAClB,IAAAA,QAAQ,CAACK,GAAT;AAAsB,GARnB,CAQoB;;AARpB,CAAf;AAWP,OAAO,IAAMc,OAAO,GAAE;AAClBC,EAAAA,KAAK,EAAE,eAACA,MAAD,EAAQC,QAAR,EAAmB;AAACtB,IAAAA,KAAK,CAACS,IAAN,6DAAuE;AAACY,MAAAA,KAAK,EAACA,MAAP;AAAaC,MAAAA,QAAQ,EAACA;AAAtB,KAAvE,EAAwG;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAxG;AAAiI,GAD1I;AAElBC,EAAAA,YAAY,EAAE,sBAACC,QAAD,EAAUC,SAAV,EAAoBC,SAApB,EAAgC;AAAC3B,IAAAA,KAAK,CAACS,IAAN,gEAAyE;AAACgB,MAAAA,QAAQ,EAARA,QAAD;AAAWG,MAAAA,KAAK,EAAE,oBAAlB;AAAwCC,MAAAA,UAAU,EAAE,QAApD;AAA8DH,MAAAA,SAAS,EAATA,SAA9D;AAAyEC,MAAAA,SAAS,EAATA;AAAzE,KAAzE,EAA8J;AAACJ,MAAAA,eAAe,EAAE;AAAlB,KAA9J;AAAuL;AAFpN,CAAf","sourcesContent":["import * as axios from \"axios\";\n\nconst instance=axios.create({\n    // \"withCredentials\": true,\n    baseURL: 'https://chat-server-project.herokuapp.com/api/'\n})\n\nexport const UsersAPI={\n    getMeInterests: ()=>{instance.get(`interests`)}, //Получение своих интересов\n    createInterests: (interests)=>{instance.post(`interests`,{interests})}, //Создание своих интересов\n    changeInterests: (interests)=>{instance.put(`interests`,{interests})}, //Смена интересов\n    getMessages: (userID)=>{instance.get(`messages?user_getting=${userID}`)}, //Получение сообщений пользователя по id через параметр user_getting\n    sendMessage: (userID, message)=>{instance.post(`messages`, {\"user_getting\": userID, \"message_text\": message})}, //Отправка сообщения пользователю\n    setRating: (rating, userID)=>{instance.post(`rating`, {\"rating\": rating, \"user\": userID})}, //Добавление рейтинга для пользователя\n    userForConversation: (interests)=>{instance.get(`user-for-conversation/`)}, // ДОРАБОТАТЬ подбор пользователя исходя из интересов\n    getUsers: ()=>{instance.get(`users`)} //Получение всех юзеров кому можно отправить сообщение\n}\n\nexport const AuthAPI ={\n    login: (login, password)=>{axios.post(`https://chat-server-project.herokuapp.com/accounts/login`, {login:login,password:password}, {withCredentials: true})},\n    registration: (username,password1,password2)=>{axios.post(`https://chat-server-project.herokuapp.com/accounts/signup/ `,{username, email: \"new_email@mail.com\", public_key: \"asddfg\", password1, password2}, {withCredentials: true})}\n\n}"]},"metadata":{},"sourceType":"module"}