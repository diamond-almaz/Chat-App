{"ast":null,"code":"import _classCallCheck from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Avtorization/Avtorization.jsx\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthAPI } from '../../api/api';\nimport { connect } from 'react-redux';\nimport { setUserData } from '../../redux/auth-reducer';\nimport { Redirect } from \"react-router-dom\";\nimport { required } from '../../validator/validator';\nimport { Input } from '../../common/FieldCommon';\nimport Preloader from '../Preloader/Preloader';\n\nvar AvtorizationForm = function AvtorizationForm(props) {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    component: Input,\n    placeholder: 'Введите логин',\n    name: 'login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    type: 'password',\n    component: Input,\n    placeholder: 'Введите пароль',\n    name: 'password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: 'input',\n    type: 'checkbox',\n    name: 'rememberMe',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \" \\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: '/registration',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\u0412\\u0445\\u043E\\u0434\")));\n};\n\nvar AdvtorizationReduxForm = reduxForm({\n  form: 'login'\n})(AvtorizationForm);\n\nvar Avtorization =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Avtorization, _React$Component);\n\n  function Avtorization() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Avtorization);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Avtorization)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editMode: true\n    };\n    return _this;\n  }\n\n  _createClass(Avtorization, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.editMode) return React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n\n      var onSubmit = function onSubmit(data) {\n        _this2.setState({\n          editMode: false\n        });\n\n        AuthAPI.login(data.login, data.password).then(function (response) {\n          //В случае успешной авторизации\n          _this2.props.setUserData(response.data.id, response.data.login);\n        }).catch(function (response) {\n          //Заглушка\n          console.log('Заглушка');\n          setTimeout(function () {\n            _this2.setState({\n              editMode: true\n            });\n          }, 2000);\n\n          _this2.props.setUserData(12, data.login);\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"\\u0412\\u0445\\u043E\\u0434\"), this.props.isAuth ? React.createElement(Redirect, {\n        to: '/profile',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : React.createElement(AdvtorizationReduxForm, {\n        onSubmit: onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Avtorization;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setUserData: setUserData\n})(Avtorization);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Avtorization/Avtorization.jsx"],"names":["React","NavLink","Field","reduxForm","AuthAPI","connect","setUserData","Redirect","required","Input","Preloader","AvtorizationForm","props","handleSubmit","AdvtorizationReduxForm","form","Avtorization","state","editMode","onSubmit","data","setState","login","password","then","response","id","catch","console","log","setTimeout","isAuth","Component","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form'\nimport {AuthAPI} from '../../api/api'\nimport {connect} from 'react-redux'\nimport {setUserData} from '../../redux/auth-reducer'\nimport {Redirect} from \"react-router-dom\";\nimport {required} from '../../validator/validator'\nimport {Input} from '../../common/FieldCommon'\nimport Preloader from '../Preloader/Preloader'\n\n\nconst AvtorizationForm=(props)=>{\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate={[required]} component={Input} placeholder={'Введите логин'} name={'login'}/>\n            </div>\n            <div>\n                <Field validate={[required]} type={'password'}  component={Input} placeholder={'Введите пароль'} name={'password'}/>\n            </div>\n            <div>\n                <Field component={'input'} type={'checkbox'} name={'rememberMe'}/> Запомнить меня\n            </div>\n            <div>\n                <NavLink to={'/registration'}>Зарегистрироваться</NavLink>\n            </div>\n            <div>\n                <button>Вход</button>\n            </div>\n\n        </form>)\n}\n\nconst AdvtorizationReduxForm = reduxForm({form: 'login'})(AvtorizationForm)\n\n\nclass Avtorization extends React.Component {\n    state={\n        editMode: true\n    }\n    render() {\n        if (!this.state.editMode) return <Preloader/>\n        const onSubmit = (data) => {\n            this.setState({editMode: false})\n            AuthAPI.login(data.login, data.password).then(response => {\n                //В случае успешной авторизации\n                this.props.setUserData(response.data.id, response.data.login)\n            }).catch((response => {\n                //Заглушка\n                console.log('Заглушка')\n                setTimeout(()=>{\n                    this.setState({editMode: true})\n                },2000)\n                this.props.setUserData(12, data.login)\n            }))\n\n\n        }\n        return <>\n            <h1>Вход</h1>\n            {this.props.isAuth ? <Redirect to={'/profile'}/> : <AdvtorizationReduxForm onSubmit={onSubmit}/>}\n        </>\n    }\n}\n\nlet mapStateToProps=(state)=>({\n    isAuth: state.auth.isAuth\n})\n\n\n\nexport default connect(mapStateToProps, {setUserData})(Avtorization)\n\n\n\n"]},"metadata":{},"sourceType":"module"}