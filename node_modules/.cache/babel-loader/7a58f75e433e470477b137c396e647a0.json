{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst getUsersSelector = state => {\n  return state.usersPage.users;\n};\n\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};\nexport const getUsersFilter = state => {\n  return state.usersPage.filter;\n};","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/react-way-of-samurai/src/redux/users-selectors.ts"],"names":["createSelector","getUsersSelector","state","usersPage","users","getUsers","filter","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAyB;AAC9C,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACH,CAFD;;AAIA,OAAO,MAAMC,QAAQ,GAAGL,cAAc,CAACC,gBAAD,EACjCG,KAAD,IAAW;AACX,SAAOA,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAI,IAAlB,CAAP;AACH,CAHqC,CAA/B;AAKP,OAAO,MAAMC,WAAW,GAAIN,KAAD,IAAyB;AAChD,SAAOA,KAAK,CAACC,SAAN,CAAgBM,QAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAIR,KAAD,IAAyB;AACvD,SAAOA,KAAK,CAACC,SAAN,CAAgBQ,eAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAIV,KAAD,IAAyB;AACnD,SAAOA,KAAK,CAACC,SAAN,CAAgBU,WAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAIZ,KAAD,IAAyB;AAClD,SAAOA,KAAK,CAACC,SAAN,CAAgBY,UAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,sBAAsB,GAAId,KAAD,IAAyB;AAC3D,SAAOA,KAAK,CAACC,SAAN,CAAgBc,mBAAvB;AACH,CAFM;AAGP,OAAO,MAAMC,cAAc,GAAIhB,KAAD,IAAyB;AACnD,SAAOA,KAAK,CAACC,SAAN,CAAgBG,MAAvB;AACH,CAFM","sourcesContent":["import {createSelector} from \"reselect\";\nimport { AppStateType } from \"./redux-store\";\n\nconst getUsersSelector = (state: AppStateType) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress;\n}\nexport const getUsersFilter = (state: AppStateType) => {\n    return state.usersPage.filter;\n}\n"]},"metadata":{},"sourceType":"module"}