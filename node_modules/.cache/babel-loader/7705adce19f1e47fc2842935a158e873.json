{"ast":null,"code":"import _regeneratorRuntime from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm, reset } from 'redux-form';\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport Preloader from '../Preloader/Preloader';\n\nvar AddMessageForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddMessageForm, _React$Component);\n\n  function AddMessageForm() {\n    _classCallCheck(this, AddMessageForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddMessageForm).apply(this, arguments));\n  }\n\n  _createClass(AddMessageForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: 'textarea',\n        name: \"message\",\n        placeholder: \"Enter your message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return AddMessageForm;\n}(React.Component);\n\nvar AddMessageFormRedux = reduxForm({\n  form: 'addMessage'\n})(AddMessageForm);\n\nvar Dialogs =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Dialogs, _React$Component2);\n\n  function Dialogs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dialogs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dialogs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: null,\n      showDialogs: true\n    };\n\n    _this.findFriend = function () {\n      _this.setState({\n        showDialogs: false\n      });\n\n      setTimeout(function () {\n        var response = {\n          id: 2,\n          name: 'Немилосердный Баран',\n          messages: []\n        };\n\n        _this.props.findFriend(response);\n\n        _this.setState({\n          showDialogs: true\n        });\n\n        alert(\"\\u0412\\u0430\\u0448 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0441\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A - \".concat(response.name));\n      }, 2000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Dialogs, [{\n    key: \"getId\",\n    value: function () {\n      var _getId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(id == this.state.id)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.next = 4;\n                return this.setState({\n                  id: id\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getId(_x) {\n        return _getId.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.showDialogs) return React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n      var state = this.props.dialogsPage;\n      if (state.dialogs.length === 0) return React.createElement(\"div\", {\n        onClick: this.findFriend,\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0439\\u0442\\u0438 \\u0441\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A\\u0430\"));\n      var dialogsElements = state.dialogs.map(function (d) {\n        return React.createElement(DialogItem, {\n          name: d.name,\n          key: d.id,\n          id: d.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      });\n\n      var onSubmit = function onSubmit(data, dispatch, props) {\n        _this2.props.sendMessage(data.message, _this2.state.id);\n\n        dispatch(props.reset());\n      };\n\n      return React.createElement(\"div\", {\n        className: s.dialogs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: s.dialogsItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, dialogsElements), React.createElement(\"div\", {\n        className: s.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/dialogs/:userId?\",\n        render: function render() {\n          return React.createElement(Message, Object.assign({}, _this2.props, {\n            messages: state.messages,\n            getId: _this2.getId.bind(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), this.state.id != null ? React.createElement(AddMessageFormRedux, {\n        onSubmit: onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : ''));\n    }\n  }]);\n\n  return Dialogs;\n}(React.Component);\n\nexport default withRouter(Dialogs);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","reset","Route","withRouter","Preloader","AddMessageForm","props","handleSubmit","Component","AddMessageFormRedux","form","Dialogs","state","id","showDialogs","findFriend","setState","setTimeout","response","name","messages","alert","dialogsPage","dialogs","length","padding","dialogsElements","map","d","onSubmit","data","dispatch","sendMessage","message","dialogsItems","getId","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm,reset } from 'redux-form';\r\nimport {Route} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nclass AddMessageForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit}>\r\n                <div><Field component={'textarea'} name={\"message\"} placeholder='Enter your message'/></div>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nlet AddMessageFormRedux=reduxForm({form: 'addMessage'})(AddMessageForm)\r\n\r\n\r\nclass Dialogs extends React.Component {\r\n    state={\r\n        id: null,\r\n        showDialogs: true\r\n    }\r\n    async getId(id) {\r\n        if (id==this.state.id) return\r\n        await this.setState({id: id})\r\n    }\r\n    findFriend=()=>{\r\n        this.setState({showDialogs: false})\r\n        setTimeout(()=>{\r\n            let response={id: 2, name: 'Немилосердный Баран', messages: []}\r\n            this.props.findFriend(response)\r\n            this.setState({showDialogs: true})\r\n            alert(`Ваш новый собеседник - ${response.name}`)\r\n        },2000)\r\n\r\n    }\r\n    render() {\r\n        if (!this.state.showDialogs) return <Preloader/>\r\n        let state = this.props.dialogsPage;\r\n\r\n        if (state.dialogs.length===0) return (<div onClick={this.findFriend} style={{padding: \"10px\"}}><button>Найти собеседника</button></div>)\r\n\r\n        let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n\r\n\r\n        let onSubmit = (data,dispatch,props) => {\r\n            this.props.sendMessage(data.message, this.state.id);\r\n            dispatch(props.reset())\r\n        }\r\n        return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>\r\n                        <Route path='/dialogs/:userId?'\r\n                               render={() => <Message {...this.props} messages={state.messages} getId={this.getId.bind(this)}/>}/>\r\n                    </div>\r\n                    {this.state.id!=null?<AddMessageFormRedux onSubmit={onSubmit}/> :''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Dialogs);"]},"metadata":{},"sourceType":"module"}