{"ast":null,"code":"import _regeneratorRuntime from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Profile/Interests.jsx\";\nimport React from 'react';\nimport s from './Profile.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { changeOneInterest, buttonIsClicked } from '../../redux/profile-reducer';\n\nvar Interests =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Interests, _React$Component);\n\n  function Interests() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Interests);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Interests)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editMode: false\n    };\n    return _this;\n  }\n\n  _createClass(Interests, [{\n    key: \"buttonIsClicked\",\n    value: function () {\n      var _buttonIsClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState({\n                  editMode: !this.state.editMode\n                });\n\n              case 2:\n                this.props.clearInterests();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function buttonIsClicked() {\n        return _buttonIsClicked.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var translateInterests = {\n        \"sport\": 'спорт',\n        \"creation\": 'творчество',\n        \"music\": 'музыка',\n        \"literature\": 'литература',\n        \"film\": 'кино',\n        \"science\": 'наука',\n        \"cars\": 'автомобили',\n        \"technology\": 'техника',\n        \"politics\": 'политика',\n        \"travel\": 'путешествие',\n        \"cooking\": 'кулинария',\n        \"art\": 'искусство',\n        \"games\": 'игры',\n        \"craft\": 'ремесло',\n        \"parenting\": 'материнство/отцовство'\n      };\n      var arr = [];\n\n      for (var i in this.props.interests) {\n        if (this.props.interests[i] == 1) {\n          for (var u in translateInterests) {\n            if (i == u) arr.push(translateInterests[u]);\n          }\n        }\n      }\n\n      var showInterests = arr.join(', ');\n\n      var onSubmit = function onSubmit(data) {\n        _this2.props.createInterests(data);\n\n        _this2.props.buttonIsClicked();\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u044B: \", showInterests, \" \", this.props.btn === true ? '' : arr.length == 0 ? React.createElement(\"button\", {\n        onClick: this.buttonIsClicked.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0438\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u044B\") : React.createElement(\"button\", {\n        onClick: this.buttonIsClicked.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0438\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u044B\"), \" \"), this.state.editMode ? React.createElement(ChangeInterestsFormRedux, {\n        onSubmit: onSubmit,\n        interests: this.props.interests,\n        translateInterests: translateInterests,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : '');\n    }\n  }]);\n\n  return Interests;\n}(React.Component);\n\nvar ChangeInterestsForm = function ChangeInterestsForm(props) {\n  var arr = [];\n\n  for (var i in props.interests) {\n    // arr.push(<div><Field component={'input'} onChange={()=>onChange(i)} checked={props.interests[i]===1?true:false} type=\"checkbox\" name={i}/>\n    //     <label htmlFor={i}>{props.translateInterests[i]}</label> </div>)\n    arr.push(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Field, {\n      component: 'input',\n      type: \"checkbox\",\n      name: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, props.translateInterests[i])));\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, arr, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E\")));\n};\n\nvar ChangeInterestsFormRedux = reduxForm({\n  form: 'interests'\n})(connect(null, {\n  changeOneInterest: changeOneInterest,\n  buttonIsClicked: buttonIsClicked\n})(ChangeInterestsForm));\nexport default Interests;","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Profile/Interests.jsx"],"names":["React","s","Field","reduxForm","connect","changeOneInterest","buttonIsClicked","Interests","state","editMode","setState","props","clearInterests","translateInterests","arr","i","interests","u","push","showInterests","join","onSubmit","data","createInterests","btn","length","bind","Component","ChangeInterestsForm","handleSubmit","ChangeInterestsFormRedux","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport s from './Profile.module.css';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux'\nimport {changeOneInterest, buttonIsClicked} from '../../redux/profile-reducer'\n\n\nclass Interests extends React.Component {\n    state={\n        editMode: false\n    }\n\n    async buttonIsClicked() {\n        await this.setState({\n            editMode: !this.state.editMode\n        })\n        this.props.clearInterests();\n    }\n\n    render() {\n        let translateInterests = {\n            \"sport\": 'спорт',\n            \"creation\": 'творчество',\n            \"music\": 'музыка',\n            \"literature\": 'литература',\n            \"film\": 'кино',\n            \"science\": 'наука',\n            \"cars\": 'автомобили',\n            \"technology\": 'техника',\n            \"politics\": 'политика',\n            \"travel\": 'путешествие',\n            \"cooking\": 'кулинария',\n            \"art\": 'искусство',\n            \"games\": 'игры',\n            \"craft\": 'ремесло',\n            \"parenting\": 'материнство/отцовство'\n        }\n\n        let arr = [];\n        for (let i in this.props.interests) {\n            if (this.props.interests[i] == 1) {\n                for (let u in translateInterests)\n                    if (i == u) arr.push(translateInterests[u])\n            }\n        }\n        let showInterests = arr.join(', ')\n\n\n        let onSubmit = (data) => {\n            this.props.createInterests(data)\n            this.props.buttonIsClicked();\n        }\n        return (<>\n                <div>Интересы: {showInterests} {this.props.btn === true ? '' : arr.length == 0 ?\n                    <button onClick={this.buttonIsClicked.bind(this)}>Добавить интересы</button> :\n                    <button onClick={this.buttonIsClicked.bind(this)}>Изменить интересы</button>} </div>\n                {/*<button onClick={changeItemsInterests}>Изменить интересы</button>*/}\n\n                {this.state.editMode ? <ChangeInterestsFormRedux onSubmit={onSubmit} interests={this.props.interests}\n                                                                translateInterests={translateInterests}/> : ''}\n            </>\n        )\n    }\n}\n\nconst ChangeInterestsForm = (props) => {\n    let arr = []\n\n    for (let i in props.interests) {\n        // arr.push(<div><Field component={'input'} onChange={()=>onChange(i)} checked={props.interests[i]===1?true:false} type=\"checkbox\" name={i}/>\n        //     <label htmlFor={i}>{props.translateInterests[i]}</label> </div>)\n        arr.push(<div><Field component={'input'} type=\"checkbox\" name={i}/>\n            <label htmlFor={i}>{props.translateInterests[i]}</label></div>)\n    }\n\n\n    return (<form onSubmit={props.handleSubmit}>\n        {arr}\n        <div>\n            <button>Готово</button>\n        </div>\n    </form>)\n}\n\n\nconst ChangeInterestsFormRedux = reduxForm({form: 'interests'})(connect(null, {\n    changeOneInterest,\n    buttonIsClicked\n})(ChangeInterestsForm))\n\n\nexport default Interests;"]},"metadata":{},"sourceType":"module"}