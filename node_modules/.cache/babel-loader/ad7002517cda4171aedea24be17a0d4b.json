{"ast":null,"code":"var _jsxFileName = \"/Users/almazsaripov/Documents/Projects/react-way-of-samurai/src/components/Login/LoginPage.tsx\";\nimport React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createField, Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validators';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport style from './../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, createField('Email', 'email', [required], Input), createField('Password', 'password', [required], Input, {\n    type: 'password'\n  }), createField(undefined, 'rememberMe', [], Input, {\n    type: 'checkbox'\n  }, 'remember me'), captchaUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }\n  }), captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {}), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\nexport const LoginPage = () => {\n  const captchaUrl = useSelector(state => state.auth.captchaUrl);\n  const isAuth = useSelector(state => state.auth.isAuth);\n  const dispatch = useDispatch();\n\n  const onSubmit = formData => {\n    dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha));\n  };\n\n  if (isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/profile',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/react-way-of-samurai/src/components/Login/LoginPage.tsx"],"names":["React","reduxForm","createField","Input","required","useDispatch","useSelector","login","Redirect","style","LoginForm","handleSubmit","error","captchaUrl","type","undefined","formSummaryError","LoginReduxForm","form","LoginPage","state","auth","isAuth","dispatch","onSubmit","formData","email","password","rememberMe","captcha"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA2BC,SAA3B,QAA2C,YAA3C;AACA,SAAQC,WAAR,EAAoCC,KAApC,QAAgD,uCAAhD;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;;AAOA,MAAMC,SAAkG,GAClG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACzC,sBACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,WAAW,CAA0B,OAA1B,EAAmC,OAAnC,EAA4C,CAACE,QAAD,CAA5C,EAAwDD,KAAxD,CADhB,EAEKD,WAAW,CAA0B,UAA1B,EAAsC,UAAtC,EAAkD,CAACE,QAAD,CAAlD,EAA8DD,KAA9D,EAAqE;AAACW,IAAAA,IAAI,EAAE;AAAP,GAArE,CAFhB,EAGKZ,WAAW,CAA0Ba,SAA1B,EAAqC,YAArC,EAAmD,EAAnD,EAAuDZ,KAAvD,EAA8D;AAACW,IAAAA,IAAI,EAAE;AAAP,GAA9D,EAAkF,aAAlF,CAHhB,EAKKD,UAAU,iBAAI;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALnB,EAMKA,UAAU,IAAIX,WAAW,CAA0B,oBAA1B,EAAgD,SAAhD,EAA2D,CAACE,QAAD,CAA3D,EAAuED,KAAvE,EAA8E,EAA9E,CAN9B,EASKS,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAEH,KAAK,CAACO,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLJ,KADK,CATd,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAbJ,CADJ;AAmBH,CArBD;;AAuBA,MAAMK,cAAc,GAAGhB,SAAS,CAAyC;AAACiB,EAAAA,IAAI,EAAE;AAAP,CAAzC,CAAT,CAAmER,SAAnE,CAAvB;AAUA,OAAO,MAAMS,SAAmB,GAAG,MAAM;AACrC,QAAMN,UAAU,GAAGP,WAAW,CAAEc,KAAD,IAAyBA,KAAK,CAACC,IAAN,CAAWR,UAArC,CAA9B;AACA,QAAMS,MAAM,GAAGhB,WAAW,CAAEc,KAAD,IAAyBA,KAAK,CAACC,IAAN,CAAWC,MAArC,CAA1B;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;;AAEA,QAAMmB,QAAQ,GAAIC,QAAD,IAAmC;AAChDF,IAAAA,QAAQ,CAAChB,KAAK,CAACkB,QAAQ,CAACC,KAAV,EAAiBD,QAAQ,CAACE,QAA1B,EAAoCF,QAAQ,CAACG,UAA7C,EAAyDH,QAAQ,CAACI,OAAlE,CAAN,CAAR;AACH,GAFD;;AAIA,MAAIP,MAAJ,EAAY;AACR,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,eAEH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEE,QAA1B;AAAoC,IAAA,UAAU,EAAEX,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAjBM","sourcesContent":["import React from 'react'\nimport {InjectedFormProps, reduxForm} from 'redux-form'\nimport {createField, GetStringKeys, Input} from '../common/FormsControls/FormsControls'\nimport {required} from '../../utils/validators/validators'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport {Redirect} from 'react-router-dom'\nimport style from './../common/FormsControls/FormsControls.module.css'\nimport {AppStateType} from '../../redux/redux-store'\n\ntype LoginFormOwnProps = {\n    captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps>\n    = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField<LoginFormValuesTypeKeys>('Email', 'email', [required], Input)}\n            {createField<LoginFormValuesTypeKeys>('Password', 'password', [required], Input, {type: 'password'})}\n            {createField<LoginFormValuesTypeKeys>(undefined, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\n\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, {})}\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\n\nexport type LoginFormValuesType = {\n    captcha: string\n    rememberMe: boolean\n    password: string\n    email: string\n}\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\n\nexport const LoginPage: React.FC = () => {\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\n    const dispatch = useDispatch()\n\n    const onSubmit = (formData: LoginFormValuesType) => {\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\n    }\n\n    if (isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n    </div>\n}\n"]},"metadata":{},"sourceType":"module"}