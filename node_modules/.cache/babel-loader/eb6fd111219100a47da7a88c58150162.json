{"ast":null,"code":"import _classCallCheck from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Chat/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile } from \"../../redux/profile-reducer\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nvar ProfileContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileContainer, _React$Component);\n\n  function ProfileContainer() {\n    _classCallCheck(this, ProfileContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfileContainer).apply(this, arguments));\n  }\n\n  _createClass(ProfileContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = 2;\n      }\n\n      this.props.getUserProfile(userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Profile, Object.assign({}, this.props, {\n        profile: this.props.profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProfileContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profilePage.profile\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile: getUserProfile\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","axios","connect","getUserProfile","Redirect","withRouter","withAuthRedirect","compose","ProfileContainer","userId","props","match","params","profile","Component","mapStateToProps","state","profilePage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,6BAA7B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,kBAAnC;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;IAEMC,gB;;;;;;;;;;;;;wCAEkB;AAChB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,UAAI,CAACA,MAAL,EAAa;AACTA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,WAAKC,KAAL,CAAWP,cAAX,CAA0BM,MAA1B;AACH;;;6BAEQ;AACL,aACI,oBAAC,OAAD,oBAAa,KAAKC,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;;;EAd0Bd,KAAK,CAACe,S;;AAiBrC,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAC9BH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AADG,GAAZ;AAAA,CAAtB;;AAIA,eAAeN,OAAO,CAClBL,OAAO,CAACa,eAAD,EAAkB;AAACZ,EAAAA,cAAc,EAAdA;AAAD,CAAlB,CADW,EAElBE,UAFkB,CAAP,CAGbG,gBAHa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile} from \"../../redux/profile-reducer\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = 2;\n        }\n        this.props.getUserProfile(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}