{"ast":null,"code":"import _objectSpread from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/almazsaripov/Documents/Projects/Chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nvar SEND_MESSAGE = 'SEND_MESSAGE';\nvar FIND_FRIEND = 'FIND_FRIEND';\nvar initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Неописуемый Олень',\n    messages: [{\n      meOryou: true,\n      message: 'Привет как дела?'\n    }, {\n      meOryou: true,\n      message: 'Привет как дела?'\n    }]\n  }]\n};\n\nvar dialogsReducer = function dialogsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SEND_MESSAGE:\n      var body = action.data;\n      var ind;\n      var newObj = state.dialogs.find(function (i, index) {\n        ind = index;\n        return i.id == action.id;\n      });\n\n      var newArr = _toConsumableArray(state.dialogs);\n\n      newArr[ind].messages.push({\n        meOryou: true,\n        message: body\n      });\n      return {\n        dialogs: _toConsumableArray(newArr)\n      };\n\n    case FIND_FRIEND:\n      return _objectSpread({}, state, {\n        dialogs: _toConsumableArray(state.dialogs).concat([action.dataFriend])\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var sendMessageCreator = function sendMessageCreator(data, id) {\n  return {\n    type: SEND_MESSAGE,\n    data: data,\n    id: id\n  };\n};\nexport var findFriendAC = function findFriendAC(dataFriend) {\n  return {\n    type: FIND_FRIEND,\n    dataFriend: dataFriend\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Chat/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","FIND_FRIEND","initialState","dialogs","id","name","messages","meOryou","message","dialogsReducer","state","action","type","body","data","ind","newObj","find","i","index","newArr","push","dataFriend","sendMessageCreator","findFriendAC"],"mappings":";;AAAA,IAAMA,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,YAAY,GAAG,cAArB;AACA,IAAMC,WAAW,GAAC,aAAlB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,mBAAd;AAAmCC,IAAAA,QAAQ,EAAE,CAAC;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,EAA6C;AAACD,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAA7C;AAA7C,GADK;AADM,CAAnB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,YAAL;AACI,UAAIa,IAAI,GAAGF,MAAM,CAACG,IAAlB;AACA,UAAIC,GAAJ;AACA,UAAIC,MAAM,GAACN,KAAK,CAACP,OAAN,CAAcc,IAAd,CAAmB,UAACC,CAAD,EAAGC,KAAH,EAAW;AACrCJ,QAAAA,GAAG,GAACI,KAAJ;AACA,eAAOD,CAAC,CAACd,EAAF,IAAMO,MAAM,CAACP,EAApB;AAAuB,OAFhB,CAAX;;AAGA,UAAIgB,MAAM,sBAAKV,KAAK,CAACP,OAAX,CAAV;;AACAiB,MAAAA,MAAM,CAACL,GAAD,CAAN,CAAYT,QAAZ,CAAqBe,IAArB,CAA0B;AAACd,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,OAAO,EAAEK;AAAzB,OAA1B;AACA,aAAO;AACHV,QAAAA,OAAO,qBAAMiB,MAAN;AADJ,OAAP;;AAGJ,SAAKnB,WAAL;AACI,+BACOS,KADP;AAEIP,QAAAA,OAAO,qBAAMO,KAAK,CAACP,OAAZ,UAAqBQ,MAAM,CAACW,UAA5B;AAFX;;AAIJ;AACI,aAAOZ,KAAP;AAlBR;AAoBF,CArBD;;AAuBA,OAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACT,IAAD,EAAMV,EAAN;AAAA,SAAc;AAACQ,IAAAA,IAAI,EAAEZ,YAAP;AAAqBc,IAAAA,IAAI,EAACA,IAA1B;AAAgCV,IAAAA,EAAE,EAAFA;AAAhC,GAAd;AAAA,CAA3B;AACP,OAAO,IAAMoB,YAAY,GAAC,SAAbA,YAAa,CAACF,UAAD;AAAA,SAAe;AAACV,IAAAA,IAAI,EAAEX,WAAP;AAAoBqB,IAAAA,UAAU,EAAVA;AAApB,GAAf;AAAA,CAAnB;AAEP,eAAeb,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\nconst FIND_FRIEND='FIND_FRIEND'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Неописуемый Олень', messages: [{meOryou:true, message: 'Привет как дела?'},{meOryou:true, message: 'Привет как дела?'}]},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n       case SEND_MESSAGE:\r\n           let body = action.data\r\n           let ind;\r\n           let newObj=state.dialogs.find((i,index)=>{\r\n               ind=index\r\n               return i.id==action.id})\r\n           let newArr=[...state.dialogs]\r\n           newArr[ind].messages.push({meOryou: true, message: body})\r\n           return {\r\n               dialogs: [...newArr],\r\n           }\r\n       case FIND_FRIEND:\r\n           return {\r\n               ...state,\r\n               dialogs: [...state.dialogs, action.dataFriend]\r\n           }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (data,id) => ({type: SEND_MESSAGE, data:data, id})\r\nexport const findFriendAC=(dataFriend)=>({type: FIND_FRIEND, dataFriend})\r\n\r\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}